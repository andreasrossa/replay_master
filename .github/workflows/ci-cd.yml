name: CI/CD Pipeline

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main]

env:
    MIX_ENV: test
    ELIXIR_VERSION: "1.17.1"
    OTP_VERSION: "26.2.5"

jobs:
    test:
        name: Run Tests
        runs-on: ubuntu-latest

        services:
            postgres:
                image: postgres:15
                env:
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_USER: postgres
                    POSTGRES_DB: replay_master_test
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Elixir
              uses: erlef/setup-beam@v1
              with:
                  elixir-version: ${{ env.ELIXIR_VERSION }}
                  otp-version: ${{ env.OTP_VERSION }}

            - name: Restore dependencies cache
              uses: actions/cache@v3
              with:
                  path: deps
                  key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-mix-

            - name: Restore build cache
              uses: actions/cache@v3
              with:
                  path: _build
                  key: ${{ runner.os }}-build-${{ env.MIX_ENV }}-${{ hashFiles('**/mix.lock') }}
                  restore-keys: |
                      ${{ runner.os }}-build-${{ env.MIX_ENV }}-

            - name: Install dependencies
              run: mix deps.get

            - name: Run tests
              run: mix test
              env:
                  DATABASE_URL: ecto://postgres:postgres@localhost:5432/replay_master_test

    build:
        name: Build Docker Image
        needs: test
        if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
        runs-on: ubuntu-24.04-arm
        permissions:
            packages: write
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ghcr.io/${{ github.repository }}
                  tags: |
                      type=ref,event=branch
                      type=ref,event=pr
                      type=sha,prefix={{branch}}-
                      type=raw,value=latest,enable={{is_default_branch}}

            - name: Build and push ARM64 image
              id: build
              uses: docker/build-push-action@v5
              with:
                  context: .
                  platforms: linux/arm64
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  build-args: |
                      BUILDKIT_INLINE_CACHE=1
                      ELIXIR_VERSION=1.17.1
                      OTP_VERSION=26.2.5
                      DEBIAN_VERSION=bullseye-20240612-slim
